function  [hipsAccXYZ_rot, chestAccXYZ_rot, headAccXYZ_rot, headVecX_fr_xyz_rot, headVecY_fr_xyz_rot, headVecZ_fr_xyz_rot] =  reorientHeadAndAccData(inData ,debug)

%%unpack inData struct
varNames = fieldnames(inData);
for i=1:length(varNames)
    eval([varNames{i} '=inData.' varNames{i} ';']);
end

%% define head center (the origin of the head vectors)
hTop =  squeeze(shadow_fr_mar_dim(:,strcmp('HeadTop', shadowMarkerNames),1:3)); %marker at Head Top
hC1 =   squeeze(shadow_fr_mar_dim(:,strcmp('Head', shadowMarkerNames),1:3)); %marker at C1 vertebra
hCen = (hTop+hC1)/2;

%% rotate head vectors so that headVecX points out the front of the head (towards the calibPoint on calibFrame), headYVec points out the top of the head, and headZ points to the left

headVecX_z(:,1) = headVecX_fr_xyz(:,1) - hCen(:,1);
headVecX_z(:,2) = headVecX_fr_xyz(:,2) - hCen(:,2);
headVecX_z(:,3) = headVecX_fr_xyz(:,3) - hCen(:,3);

headVecY_z(:,1) = headVecY_fr_xyz(:,1) - hCen(:,1);
headVecY_z(:,2) = headVecY_fr_xyz(:,2) - hCen(:,2);
headVecY_z(:,3) = headVecY_fr_xyz(:,3) - hCen(:,3);

headVecZ_z(:,1) = headVecZ_fr_xyz(:,1) - hCen(:,1);
headVecZ_z(:,2) = headVecZ_fr_xyz(:,2) - hCen(:,2);
headVecZ_z(:,3) = headVecZ_fr_xyz(:,3) - hCen(:,3);


%HeadVecX
[xAz, xEl, xRho] = cart2sph(xUnit(1), xUnit(2), xUnit(3));
[gAz, gEl, gRho] = cart2sph(gaze_z(1), gaze_z(2), gaze_z(3));

eyeStruct.(thisEyeD).rotXToGzEul(fr,:) = [gAz, -gEl, 0];
rotXToGz = eul2rotm(eyeStruct.(thisEyeD).rotXToGzEul(fr,:)); %if you want to add torsion, replace that 0 with your desired torsion value (radians)


%%
if debug
    
    figure(8544)

    lLeg = [2 3 4 5 6 7 5];
    rLeg = [2 8 9 10 11 12 10];
    tors = [2 13 14 15 26 27 28];
    lArm = [15 16 17 26 17 18 19 20];
    rArm = [15 21 22 26 22 23 24 25];
    
    fr = calibFrame;
    
    
    
    plot3(shadow_fr_mar_dim(fr,1:28,1),shadow_fr_mar_dim(fr,1:28,2),shadow_fr_mar_dim(fr,1:28,3),'ko','MarkerFaceColor','k','MarkerSize',4)
    hold on
    
    
    plot3(shadow_fr_mar_dim(fr,lLeg,1),shadow_fr_mar_dim(fr,lLeg,2),shadow_fr_mar_dim(fr,lLeg,3),'b','LineWidth',2)
    plot3(shadow_fr_mar_dim(fr,rLeg,1),shadow_fr_mar_dim(fr,rLeg,2),shadow_fr_mar_dim(fr,rLeg,3),'r','LineWidth',2)
    plot3(shadow_fr_mar_dim(fr,tors,1),shadow_fr_mar_dim(fr,tors,2),shadow_fr_mar_dim(fr,tors,3),'g','LineWidth',2)
    plot3(shadow_fr_mar_dim(fr,lArm,1),shadow_fr_mar_dim(fr,lArm,2),shadow_fr_mar_dim(fr,lArm,3),'b','LineWidth',2)
    plot3(shadow_fr_mar_dim(fr,rArm,1),shadow_fr_mar_dim(fr,rArm,2),shadow_fr_mar_dim(fr,rArm,3),'r','LineWidth',2)
    
    
    plot3([hCen(fr,1) rEyeballCenterXYZ(fr,1)], [hCen(fr,2) rEyeballCenterXYZ(fr,2)], [hCen(fr,3) rEyeballCenterXYZ(fr,3)],'rp-')
    plot3([hCen(fr,1) lEyeballCenterXYZ(fr,1)], [hCen(fr,2) lEyeballCenterXYZ(fr,2)], [hCen(fr,3) lEyeballCenterXYZ(fr,3)],'bp-')
    
    %plot head axes
    hx = hCen(fr,1);
    hy = hCen(fr,2);
    hz = hCen(fr,3);
    
    headVecScale = 1;
    plot3([ hx headVecX_fr_xyz(fr,1)*headVecScale], [hy headVecX_fr_xyz(fr,2)*headVecScale],[hz headVecX_fr_xyz(fr,3)*headVecScale],'r-','LineWidth',3)
    plot3([ hx headVecY_fr_xyz(fr,1)*headVecScale], [hy headVecY_fr_xyz(fr,2)*headVecScale],[hz headVecY_fr_xyz(fr,3)*headVecScale],'g-','LineWidth',3)
    plot3([ hx headVecZ_fr_xyz(fr,1)*headVecScale], [hy headVecZ_fr_xyz(fr,2)*headVecScale],[hz headVecZ_fr_xyz(fr,3)*headVecScale],'c-','LineWidth',3)
    

    
    %plot calib point
    plot3(calibPoint(1), calibPoint(2), calibPoint(3), 'kp', 'MarkerFaceColor','y', 'MarkerSize',16)
    
    bx =   shadow_fr_mar_dim(fr,1,1);
    by =   shadow_fr_mar_dim(fr,1,2);
    bz =   shadow_fr_mar_dim(fr,1,3);
    
    [xx,zz] = meshgrid(-2000+bx:100:2000+bx, -2500+bz:100:2000+bz);
    surface(xx,zeros(size(xx)),zz,'FaceColor','w')
    
    axis([-2000+bx 2000+bx -2000+by 2000+by -2500+bz 2000+bz])
    
    view(-173, -43);
    axis equal
    title(num2str(fr))
    set(gca,'CameraUpVector',[0 1 0])
    xlabel('x');ylabel('y'); zlabel('z');
    
    hold off
    drawnow
end




